#!/bin/bash

function send_log(){
CHATID=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 3)
KEY=$(grep -E "^#bot# " "/etc/bot/.bot.db" | cut -d ' ' -f 2)
TIME="10"
URL="https://api.telegram.org/bot$KEY/sendMessage"
TEXT="
<code>────────────────────</code>
<b>⚠️ NOTIFICATIONS MULTI LOGIN ⚠️</b>
<code>────────────────────</code>
<code>Username  : </code><code>$user</code>
<code>Online IP : </code><code>$cekcek</code>
<code>Limit Ip  : </code><code>$iplimit</code>
<code>────────────────────</code>
"
curl -s --max-time $TIME -d "chat_id=$CHATID&disable_web_page_preview=1&text=$TEXT&parse_mode=html" $URL >/dev/null
}

function vmip(){
#LIMITVMESSIP
echo -n > /var/log/xray/access.log
sleep 440
data=( `ls /etc/kyt/limit/vmess/ip`);
    for user in "${data[@]}"
    do
        iplimit=$(cat /etc/kyt/limit/vmess/ip/$user)
        ehh=$(cat /var/log/xray/access.log | grep "$user" | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq);
        cekcek=$(echo -e "$ehh" | wc -l);
        if [[ $cekcek -gt $iplimit ]]; then
            exp=$(grep -w "^### $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
                  sed -i "/^### $user $exp/,/^},{/d" /etc/xray/config.json
                  sed -i "/^### $user $exp/d" /etc/vmess/.vmess.db
                  systemctl restart xray >> /dev/null 2>&1
                  jum2=$(cat /tmp/ipvmess.txt | wc -l)
                  rm -rf /etc/kyt/limit/vmess/ip/$user
                  send_log
                else
            echo ""
        fi
        sleep 0.1
    done
}
function vlip(){
#LIMITVLESSIP
echo -n > /var/log/xray/access.log
sleep 440
data=( `ls /etc/kyt/limit/vless/ip`);
    for user in "${data[@]}"
    do
        iplimit=$(cat /etc/kyt/limit/vless/ip/$user)
        ehh=$(cat /var/log/xray/access.log | grep "$user" | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq);
        cekcek=$(echo -e "$ehh" | wc -l);
        if [[ $cekcek -gt $iplimit ]]; then
            exp=$(grep -w "^#& $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
                  sed -i "/^#& $user $exp/,/^},{/d" /etc/xray/config.json
                  sed -i "/^### $user $exp/d" /etc/vless/.vless.db
                  systemctl restart xray >> /dev/null 2>&1
                  jum2=$(cat /tmp/ipvless.txt | wc -l)
                  rm -rf /etc/kyt/limit/vless/ip/$user
                  send_log
                else
            echo ""
        fi
        sleep 0.1
    done
}
function trip(){
#LIMITIPTROJAN
echo -n > /var/log/xray/access.log
sleep 440
data=( `ls /etc/kyt/limit/trojan/ip`);
    for user in "${data[@]}"
    do
        iplimit=$(cat /etc/kyt/limit/trojan/ip/$user)
        ehh=$(cat /var/log/xray/access.log | grep "$user" | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq);
        cekcek=$(echo -e "$ehh" | wc -l);
        if [[ $cekcek -gt $iplimit ]]; then
            exp=$(grep -w "^#! $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
                  sed -i "/^#! $user $exp/,/^},{/d" /etc/xray/config.json
                  sed -i "/^### $user $exp/d" /etc/trojan/.trojan.db
                  systemctl restart xray >> /dev/null 2>&1
                  jum2=$(cat /tmp/iptrojan.txt | wc -l)
                  rm -rf /etc/kyt/limit/trojan/ip/$user
                  send_log
                else
            echo ""
        fi
        sleep 0.1
    done
}

##Limit SS
function ssws(){
echo -n > /var/log/xray/access.log
sleep 440
data=( `ls /etc/kyt/limit/shadowsocks/ip`);
    for user in "${data[@]}"
    do
        iplimit=$(cat /etc/kyt/limit/shadowsocks/ip/$user)
        ehh=$(cat /var/log/xray/access.log | grep "$user" | cut -d " " -f 3 | sed 's/tcp://g' | cut -d ":" -f 1 | sort | uniq);
        cekcek=$(echo -e "$ehh" | wc -l);
        if [[ $cekcek -gt $iplimit ]]; then
            exp=$(grep -w "^#!# $user" "/etc/xray/config.json" | cut -d ' ' -f 3 | sort | uniq)
                  sed -i "/^#!# $user $exp/,/^},{/d" /etc/xray/config.json
                  sed -i "/^### $user $exp/d" /etc/shadowsocks/.shadowsocks.db
                  systemctl restart xray >> /dev/null 2>&1
                  jum2=$(cat /tmp/ipshadowsocks.txt | wc -l)
                  rm -rf /etc/kyt/limit/shadowsocks/ip/$user
                  send_log
                else
            echo ""
        fi
        sleep 0.1
    done
}
function member1(){
    data=( `ps aux | grep "\[priv\]" | sort -k 72 | awk '{print $2}'`);
    for PID in "${data[@]}"
    do
            cat /tmp/login-db.txt | grep "sshd\[$PID\]" > /tmp/login-db-pid.txt;
            NUM=`cat /tmp/login-db-pid.txt | wc -l`;
            USER=`cat /tmp/login-db-pid.txt | awk '{print $9}'`;
            IP=`cat /tmp/login-db-pid.txt | awk '{print $11}'`;
            if [ $NUM -eq 1 ]; then
                total=$(${PID} | wc -l)
                echo -e " ${PID} ${USER} ${total}"
        fi
    done
}

function sship(){
mulog=$(member)
date=$(date)
data=( `ls /etc/kyt/limit/ssh/ip`);
    for user in "${data[@]}"
    do
        iplimit=$(cat /etc/kyt/limit/ssh/ip/$user)
        cekcek=$(echo -e "$mulog" | grep $user | wc -l);
        if [[ $cekcek -gt $iplimit ]]; then
        userdel -f -r $user
        nais=3
        echo -e "$waktu\nRemoved User: $user Login: $cekcek IP Max: $iplimit IP \n" >> /etc/kyt/log/ssh/ssh.log
        else
        echo > /dev/null
        fi
        sleep 0.1
    done
if [[ $nais -gt 1 ]]; then
    send_log
else
    echo > /dev/null
fi
}

if [[ ${1} == "vmip" ]]; then
vmip
elif [[ ${1} == "vlip" ]]; then
vlip
elif [[ ${1} == "trip" ]]; then
trip
elif [[ ${1} == "ssws" ]]; then
ssws
fi




